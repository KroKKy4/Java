package model.myShape;

import model.myShape.Draw;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.Point2D;
import java.awt.geom.RectangularShape;
import java.util.Observable;
import java.util.Observer;


public class MyShape extends Observable{
    RectangularShape shape;
    Color color;
    TypeFill tf;
    public MyShape(RectangularShape shape) {
        this.shape = shape;
        color = Color.CYAN;
        tf = new Draw();
    }

    public MyShape() {
    }

    public void setShape(RectangularShape shape) {
        this.shape = shape;
    }

    public void setFrame(Point2D[] p) {
        shape.setFrameFromDiagonal(p[0], p[1]);
        
    }

    public void setTF(TypeFill TF) {
        this.tf = TF;
    }
    
    public void draw(Graphics2D g2) {
       if(shape!=null) tf.draw(g2,this);
    }

    
}


=======================================||FILL||==========================================================

package model.myShape;

import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.geom.RectangularShape;


public class Fill implements TypeFill{
    @Override
    public void draw(Graphics2D g2,MyShape shape){
        Paint p = g2.getPaint();
        g2.setColor(shape.color);
        g2.fill(shape.shape);
        g2.setPaint(p);
        
    }
}





==================================================||FRAME||=========================================================
package view;



import javax.swing.JFrame;
/**
 *
 * @author Netbeans
 */
public class MyFrame extends JFrame {
    MyPanel panel;

    public MyFrame(MyPanel p) {
        panel = p;
        add(panel);
        setSize(500,500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        
    }








===========================================================||MY_PANEL||======================================================
package view;



import controller.Controller;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JPanel;

/**
 *
 * @author Netbeans
 */
public class MyPanel extends JPanel implements Observer{
    Controller controller;
    
    public MyPanel(Controller c){
       controller = c;
        
        addMouseListener (new MouseAdapter(){
            @Override
            public void mousePressed(MouseEvent e) {
                controller.mouseePressed(e.getPoint());
                //System.out.println("mouse Pressed "+ e.getPoint());
            }
        });
        addMouseMotionListener(new MouseMotionAdapter() {
             @Override
             public void mouseDragged(MouseEvent e) {
                 controller.mouseeDragged(e.getPoint());
                 
             }
            
});
       
            
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); 
        Graphics2D g2 = (Graphics2D)g;
        controller.draw(g2);
    }

    @Override
    public void update(Observable o, Object arg) {
        repaint();
    }
    
            
}


